basePath: /api/v1
definitions:
  handler.AddRepositoryRequest:
    properties:
      name:
        type: string
      owner:
        type: string
    type: object
  models.AuthorCommitCount:
    properties:
      author_name:
        type: string
      commit_count:
        type: integer
    type: object
  models.Commit:
    properties:
      author_date:
        type: string
      author_email:
        type: string
      author_name:
        type: string
      commit_url:
        type: string
      id:
        type: integer
      message:
        type: string
      repository_id:
        type: integer
      sha:
        type: string
    type: object
  models.DateRequest:
    properties:
      since:
        type: string
    type: object
  models.Repository:
    properties:
      created_at:
        type: string
      description:
        type: string
      forks_count:
        type: integer
      id:
        type: integer
      language:
        type: string
      last_commit_fetched_at:
        type: string
      name:
        type: string
      open_issues_count:
        type: integer
      stars_count:
        type: integer
      updated_at:
        type: string
      url:
        type: string
      watchers_count:
        type: integer
    type: object
host: localhost:8081
info:
  contact: {}
  description: A Go service that monitors GitHub repositories, tracks commits, and
    stores data in a persistent database.
  title: GitHub Monitory Service
  version: 1.0.0
paths:
  /repositories:
    post:
      consumes:
      - application/json
      description: Adds a new GitHub repository to be monitored
      parameters:
      - description: Repository to Add
        in: body
        name: repository
        required: true
        schema:
          $ref: '#/definitions/handler.AddRepositoryRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            type: string
        "409":
          description: Repository already monitored
          schema:
            type: string
        "500":
          description: Failed to sync repository
          schema:
            type: string
      summary: Add a repository to monitor
      tags:
      - repositories
  /repositories/{owner}/{name}/commits:
    get:
      description: List commits for a repository (supports filtering & pagination)
      parameters:
      - description: Repository Owner
        in: path
        name: owner
        required: true
        type: string
      - description: Repository Name
        in: path
        name: name
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 30
        description: Number of items per page
        in: query
        name: limit
        type: integer
      - description: Start date (RFC3339)
        in: query
        name: since
        type: string
      - description: End date (RFC3339)
        in: query
        name: until
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Commit'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Commits
      tags:
      - Commits
  /repositories/{owner}/{name}/monitor:
    post:
      consumes:
      - application/json
      description: Starts monitoring repository for new data since a given date
      parameters:
      - description: Repository Owner
        in: path
        name: owner
        required: true
        type: string
      - description: Repository Name
        in: path
        name: name
        required: true
        type: string
      - description: Start date
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.DateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Monitor Repository
      tags:
      - Repository
  /repositories/{owner}/{name}/reset-collection:
    post:
      consumes:
      - application/json
      description: Deletes and reloads repo data from GitHub starting from a given
        date
      parameters:
      - description: Repository Owner
        in: path
        name: owner
        required: true
        type: string
      - description: Repository Name
        in: path
        name: name
        required: true
        type: string
      - description: Start date
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.DateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Reset Repository Data
      tags:
      - Repository
  /repositories/{owner}/{name}/top-authors:
    get:
      description: Fetch top commit authors by number of commits
      parameters:
      - description: Repository Owner
        in: path
        name: owner
        required: true
        type: string
      - description: Repository Name
        in: path
        name: name
        required: true
        type: string
      - default: 10
        description: Max authors to return
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.AuthorCommitCount'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Top Authors
      tags:
      - Analytics
  /repositories/{owner}/{repo}:
    get:
      description: Fetch repository metadata from DB
      parameters:
      - description: Repository Owner
        in: path
        name: owner
        required: true
        type: string
      - description: Repository Name
        in: path
        name: repo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Repository'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Repository
      tags:
      - Repository
swagger: "2.0"
